{
  "openapi": "3.0.0",
  "info": {
    "title": "partneros_meta_v1_api",
    "description": "API for fetching METADATA information for the given product",
    "version": "1.0.0"
  },
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://swaggerhub.corpprod.awswuintranet.net/virts/wu-partner/partnerOS_meta_v1_api/1.0.0"
    },
    {
      "url": "http://localhost:8080",
      "description": "Sandbox environment"
    }
  ],
  "tags": [
    {
      "name": "PartnerOS_Meta"
    }
  ],
  "paths": {
    "/v1/partneros/meta/pricing/quote": {
      "get": {
        "description": "This API facilitates the partner to get the metadata required for the API. It provides the list of fields mandatory and optional",
        "tags": [
          "PricingProductMeta"
        ],
        "operationId": "PricingMeta",
        "parameters": [
          {
            "in": "query",
            "name": "module",
            "schema": {
              "type": "string",
              "default": "pricing"
            }
          },
          {
            "in": "query",
            "name": "path",
            "schema": {
              "type": "string",
              "default": "quote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "x-wu-externalRefId": {
                "schema": {
                  "type": "string"
                },
                "description": "The external Reference Id sent by calling application in request header."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteResponse"
                },
                "examples": {
                  "QuotesResponse": {
                    "$ref": "#/components/examples/QuoteResponse"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/v1/partneros/meta/order/create": {
      "post": {
        "description": "This API facilitates the partner to get the metadata required for the API. It provides the list of fields mandatory and optional",
        "tags": [
          "createOrderProductMeta"
        ],
        "operationId": "createOrderMeta",
        "parameters": [
          {
            "$ref": "#/components/parameters/xwumodule"
          },
          {
            "$ref": "#/components/parameters/xwupath"
          }
        ],
        "requestBody": {
          "description": "Accepts the Request Body from Smart Proxy",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "x-wu-externalRefId": {
                "schema": {
                  "type": "string"
                },
                "description": "The external Reference Id sent by calling application in request header."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrderResponse"
                },
                "examples": {
                  "createOrderResponse": {
                    "$ref": "#/components/examples/createOrderResponse"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "headers": {
      "x-wu-externalRefId": {
        "schema": {
          "type": "string"
        },
        "description": "Unique reference id sent by API clients to track individual requests",
        "example": "exrefid01021"
      }
    },
    "parameters": {
      "externalRefIdParam": {
        "name": "x-wu-externalRefId",
        "in": "header",
        "description": "Unique request id generated by calling application. Used for end to end request tracking.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "xwumodule": {
        "name": "x-wu-module",
        "in": "header",
        "description": "Module of the Meta aPI",
        "schema": {
          "type": "string",
          "example": "order"
        }
      },
      "xwupath": {
        "name": "x-wu-path",
        "in": "header",
        "description": "Module of the Meta aPI",
        "schema": {
          "type": "string",
          "example": "create"
        }
      },
      "apiKeyParam": {
        "name": "x-api-key",
        "in": "header",
        "description": "Unique API Key used by the calling application to invoke the API.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ProductQueryParameter": {
        "name": "productName",
        "in": "query",
        "description": "Name of the product to build the catalog",
        "schema": {
          "$ref": "#/components/schemas/Product"
        }
      },
      "ModuleParameter": {
        "name": "moduleName",
        "in": "query",
        "description": "Name of the product to build the catalog",
        "schema": {
          "$ref": "#/components/schemas/Module"
        }
      },
      "PathNameParameter": {
        "name": "pathName",
        "in": "query",
        "description": "Name of the API to build the catalog",
        "schema": {
          "$ref": "#/components/schemas/Path"
        }
      }
    },
    "schemas": {
      "Product": {
        "title": "Enum/Array of Products towards building workflow",
        "type": "string",
        "description": "Product name",
        "default": "SEND_MONEY",
        "enum": [
          "SEND_MONEY",
          "RETAIL"
        ]
      },
      "Module": {
        "title": "Enum/Array of module towards building workflow",
        "type": "string",
        "enum": [
          "config",
          "pricing",
          "order"
        ]
      },
      "Path": {
        "title": "Enum/Array of API towards building workflow",
        "type": "string",
        "enum": [
          "entitledDestionations",
          "quote",
          "create",
          "confirm"
        ]
      },
      "CreateOrderRequestFields": {
        "type": "object",
        "properties": {
          "senderCountry": {
            "type": "string"
          },
          "senderCurrency": {
            "type": "string"
          },
          "receiverCountry": {
            "type": "string"
          },
          "receiverCurrency": {
            "type": "string"
          },
          "attemptType": {
            "type": "string"
          }
        }
      },
      "QuoteResponse": {
        "type": "object",
        "properties": {
          "fieldsDetails": {
            "$ref": "#/components/schemas/FieldsDetails"
          }
        }
      },
      "CreateOrderRequest": {
        "$ref": "#/components/schemas/CreateOrderRequestFields"
      },
      "CreateOrderResponse": {
        "type": "object",
        "properties": {
          "fieldsDetails": {
            "$ref": "#/components/schemas/FieldsDetails"
          }
        }
      },
      "FieldsDetails": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": null,
            "$ref": "#/components/schemas/Field"
          }
        }
      },
      "Field": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "length": {
            "type": "integer"
          },
          "uiFieldType": {
            "type": "string"
          },
          "uriIdentifier": {
            "type": "string"
          },
          "required": {
            "type": "string",
            "enum": [
              "M",
              "C",
              "O"
            ]
          },
          "conditions": {
            "type": "array",
            "additionalProperties": false,
            "items": null,
            "$ref": "#/components/schemas/Conditions"
          },
          "listValue": {
            "type": "array",
            "items": null,
            "$ref": "#/components/schemas/ListValue"
          },
          "validations": {
            "type": "array",
            "additionalProperties": false,
            "items": null,
            "$ref": "#/components/schemas/Validations"
          }
        }
      },
      "Validations": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "expression": {
            "type": "string"
          }
        }
      },
      "Conditions": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string"
          },
          "valueList": {
            "type": "array",
            "additionalProperties": false,
            "items": null,
            "$ref": "#/components/schemas/ValueList"
          },
          "dependentFieldList": {
            "type": "array",
            "additionalProperties": false,
            "items": null,
            "$ref": "#/components/schemas/DependentFieldList"
          }
        }
      },
      "ValueList": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "DependentFieldList": {
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string"
          },
          "dependency": {
            "type": "string"
          },
          "listValue": {
            "type": "array",
            "items": null,
            "$ref": "#/components/schemas/ListValue"
          }
        }
      },
      "ListValue": {
        "type": "object",
        "properties": {
          "displayValue": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "WUError": {
        "description": "Model representing Western Union Error schema",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique name of the error",
            "example": "VALIDATION_ERROR"
          },
          "message": {
            "type": "string",
            "description": "Message describing the error",
            "example": "One or more fields raised validation errors"
          },
          "errorCode": {
            "type": "string",
            "description": "Syntactic Error code",
            "example": "E0005"
          },
          "issues": {
            "type": "array",
            "description": "additional details of the error",
            "items": null,
            "$ref": "#/components/schemas/WUErrorDetails"
          }
        }
      },
      "WUErrorDetails": {
        "description": "Model representing WUError details - List of fields causing errors and their specific error messages",
        "type": "object",
        "properties": {
          "field": {
            "description": "field causing issue",
            "type": "string",
            "example": "userId"
          },
          "issue": {
            "description": "field specific issue description",
            "type": "string",
            "example": "Invalid User Id Entered"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "headers": {
          "x-wu-externalRefId": {
            "$ref": "#/components/headers/x-wu-externalRefId"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/WUError"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "headers": {
          "x-wu-externalRefId": {
            "$ref": "#/components/headers/x-wu-externalRefId"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/WUError"
            }
          }
        }
      }
    },
    "examples": {
      "QuoteResponse": {
        "value": {
          "fieldsDetails": {
            "fields": [
              {
                "name": "sender.country",
                "label": "Sender Country",
                "uiFieldType": "LIST",
                "required": "M",
                "listValue": [
                  {
                    "displayValue": "Canada",
                    "id": "CA"
                  },
                  {
                    "displayValue": "United States",
                    "id": "US"
                  },
                  {
                    "displayValue": "Mexico",
                    "id": "MX"
                  },
                  {
                    "displayValue": "India",
                    "id": "IN"
                  }
                ]
              },
              {
                "name": "sender.currency",
                "label": "Sender Currency",
                "uiFieldType": "LIST",
                "required": "M",
                "listValue": [
                  {
                    "displayValue": "Canadian Dollar",
                    "id": "CAD"
                  },
                  {
                    "displayValue": "US Dollars",
                    "id": "USD"
                  },
                  {
                    "displayValue": "Euro",
                    "id": "EUR"
                  },
                  {
                    "displayValue": "Indian Rupee",
                    "id": "INR"
                  }
                ]
              },
              {
                "name": "payoutMethod",
                "label": "payout Method",
                "uiFieldType": "LIST",
                "required": "M",
                "listValue": [
                  {
                    "displayValue": "Money In Minutes",
                    "id": "MIM"
                  },
                  {
                    "displayValue": "Direct To Bank",
                    "id": "D2B"
                  },
                  {
                    "displayValue": "CASH",
                    "id": "CA"
                  },
                  {
                    "displayValue": "Direct to Card",
                    "id": "D2C"
                  }
                ]
              },
              {
                "name": "payinMethod",
                "label": "payin Method",
                "uiFieldType": "LIST",
                "required": "M",
                "listValue": [
                  {
                    "displayValue": "CASH",
                    "id": "CA"
                  }
                ]
              },
              {
                "name": "consumerSendAmount",
                "label": "consumer Send Amount",
                "uiFieldType": "TEXTFIELD",
                "required": "M",
                "validations": [
                  {
                    "type": "regex",
                    "expression": "^\\d{10}$"
                  }
                ]
              },
              {
                "name": "receiver.country",
                "label": "Receiver Country",
                "uiFieldType": "LIST",
                "required": "M",
                "listValue": [
                  {
                    "displayValue": "Canada",
                    "id": "CA"
                  },
                  {
                    "displayValue": "United States",
                    "id": "US"
                  },
                  {
                    "displayValue": "Mexico",
                    "id": "MX"
                  },
                  {
                    "displayValue": "India",
                    "id": "IN"
                  }
                ]
              },
              {
                "name": "receiver.currency",
                "label": "Receiver Currency",
                "uiFieldType": "LIST",
                "required": "M",
                "listValue": [
                  {
                    "displayValue": "Canadian Dollar",
                    "id": "CAD"
                  },
                  {
                    "displayValue": "US Dollars",
                    "id": "USD"
                  },
                  {
                    "displayValue": "Euro",
                    "id": "EUR"
                  },
                  {
                    "displayValue": "Indian Rupee",
                    "id": "INR"
                  }
                ]
              }
            ]
          }
        }
      },
      "createOrderResponse": {
        "value": {
          "fieldsDetails": {
            "fields": [
              {
                "name": "sender.type",
                "label": "Sender Type",
                "uiFieldType": "LIST",
                "required": "M",
                "listValue": [
                  {
                    "dispalyValue": "Customer",
                    "id": "C"
                  },
                  {
                    "dispalyValue": "Business",
                    "id": "B"
                  }
                ]
              },
              {
                "name": "sender.name.nameType",
                "label": "Name Type",
                "uiFieldType": "LIST",
                "required": "M",
                "conditions": [
                  {
                    "operation": "EQ",
                    "valueList": [
                      {
                        "value": "I"
                      }
                    ],
                    "dependentFieldList": [
                      {
                        "fieldName": "sender.name.firstName",
                        "dependency": "M"
                      },
                      {
                        "fieldName": "sender.name.lastName",
                        "dependency": "M"
                      }
                    ]
                  },
                  {
                    "operation": "EQ",
                    "valueList": [
                      {
                        "value": "M"
                      }
                    ],
                    "dependentFieldList": [
                      {
                        "fieldName": "sender.name.givenName",
                        "dependency": "M"
                      },
                      {
                        "fieldName": "sender.name.paternalName",
                        "dependency": "M"
                      }
                    ],
                    "validations": [
                      {
                        "type": "regex",
                        "expression": "^[a-zA-Z]*$"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "sender.name.firstName",
                "label": "First Name",
                "length": 50,
                "uiFieldType": "TEXTFIELD",
                "required": "C",
                "validations": [
                  {
                    "type": "regex",
                    "expression": "^[a-zA-Z]*$"
                  }
                ]
              },
              {
                "name": "sender.name.lastName",
                "label": "First Name",
                "length": 50,
                "uiFieldType": "TEXTFIELD",
                "required": "C",
                "validations": [
                  {
                    "type": "regex",
                    "expression": "^[a-zA-Z]*$"
                  }
                ]
              },
              {
                "name": "sender.address.country",
                "label": "Country",
                "uiFieldType": "LIST",
                "required": "M",
                "conditions": [
                  {
                    "operation": "EQ",
                    "valueList": [
                      {
                        "value": "Albania"
                      }
                    ],
                    "dependentFieldList": [
                      {
                        "fieldName": "sender.address.line1",
                        "dependency": "M"
                      }
                    ],
                    "validations": [
                      {
                        "type": "regex",
                        "expression": "^[a-zA-Z]*$"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "receiver.name.nameType",
                "label": "Name Type",
                "uiFieldType": "LIST",
                "required": "M",
                "conditions": [
                  {
                    "operation": "EQ",
                    "valueList": [
                      {
                        "value": "I"
                      }
                    ],
                    "dependentFieldList": [
                      {
                        "fieldName": "receiver.name.firstName",
                        "dependency": "M"
                      },
                      {
                        "fieldName": "receiver.name.lastName",
                        "dependency": "M"
                      }
                    ],
                    "validations": [
                      {
                        "type": "regex",
                        "expression": "^[a-zA-Z]*$"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "receiver.name.firstName",
                "label": "First Name",
                "length": 50,
                "uiFieldType": "TEXTFIELD",
                "required": "C",
                "validations": [
                  {
                    "type": "regex",
                    "expression": "^[a-zA-Z]*$"
                  }
                ]
              },
              {
                "name": "receiver.name.lastName",
                "label": "First Name",
                "length": 50,
                "uiFieldType": "TEXTFIELD",
                "required": "C",
                "validations": [
                  {
                    "type": "regex",
                    "expression": "^[a-zA-Z]*$"
                  }
                ]
              },
              {
                "name": "payoutDetails.quoteID",
                "label": "QuoteId",
                "uiFieldType": "TEXTFIELD",
                "required": "M"
              }
            ]
          }
        }
      }
    }
  }
}