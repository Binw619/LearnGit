{
  "openapi": "3.0.0",
  "info": {
    "title": "partneros_workflow_v1_api",
    "description": "API for fetching workflow for the given product",
    "version": "1.0.0"
  },
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://swaggerhub.corpprod.awswuintranet.net/virts/wu-partner/partnerOS_workflow_v1_api/1.0.0"
    },
    {
      "url": "http://localhost:8080",
      "description": "Sandbox environment"
    }
  ],
  "tags": [
    {
      "name": "ProductWorkflow"
    }
  ],
  "paths": {
    "/v1/partneros/workflow": {
      "get": {
        "description": "This API facilitates the partner to search the list of the modules and their corresponding request fields and API details for a given product type and use case combination. It also provides if the response should be cached by partner and if so, for how much time.",
        "tags": [
          "GetProductWorkflow"
        ],
        "operationId": "getProductWorkflow",
        "parameters": [
          {
            "$ref": "#/components/parameters/ProductQueryParamter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "headers": {
              "x-wu-externalRefId": {
                "schema": {
                  "type": "string"
                },
                "description": "The external Reference Id sent by calling application in request header."
              },
              "x-wu-correlationID": {
                "schema": {
                  "type": "string"
                },
                "description": "Internal Reference Id generated for internal tracking purpose."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                },
                "examples": {
                  "Co-branded_partner_SendMoney_UseCase": {
                    "$ref": "#/components/examples/SendMoneyCashPayWorkflowResponse"
                  },
                  "Whitelabel_Partner_SendMoney_Usecase": {
                    "$ref": "#/components/examples/SendMoneyWorkflowResponse"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "headers": {
      "x-wu-externalRefId": {
        "schema": {
          "type": "string"
        },
        "description": "Unique reference id sent by API clients to track individual requests",
        "example": "exrefid01021"
      }
    },
    "parameters": {
      "externalRefIdParam": {
        "name": "x-wu-externalRefId",
        "in": "header",
        "description": "Unique request id generated by calling application. Used for end to end request tracking.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "apiKeyParam": {
        "name": "x-api-key",
        "in": "header",
        "description": "Unique API Key used by the calling application to invoke the API.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ProductQueryParamter": {
        "name": "productName",
        "in": "query",
        "description": "Name of the product to build the workflow API",
        "schema": {
          "$ref": "#/components/schemas/Product"
        }
      }
    },
    "schemas": {
      "Product": {
        "title": "Enum/Array of Products towards building workflow",
        "type": "string",
        "description": "Product name",
        "default": "SENDMONEY",
        "enum": [
          "SENDMONEY",
          "RECEIVEMONEY"
        ]
      },
      "WorkflowResponse": {
        "title": "Workflow response",
        "type": "object",
        "description": "Workflow response for the given use case",
        "properties": {
          "name": {
            "title": "Name of the workflow",
            "type": "string"
          },
          "modules": {
            "$ref": "#/components/schemas/Modules"
          }
        }
      },
      "Modules": {
        "type": "array",
        "items": null,
        "$ref": "#/components/schemas/Module"
      },
      "Module": {
        "type": "object",
        "required": [
          "name",
          "uri",
          "successCriterias"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/ModuleName"
          },
          "pathName": {
            "type": "string",
            "example": "Quote"
          },
          "pathUri": {
            "type": "string",
            "example": "/v1/partneros/quote"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "caching": {
            "type": "object",
            "properties": {
              "isEnabled": {
                "type": "boolean",
                "example": true
              },
              "ttl": {
                "type": "string",
                "example": 2400
              }
            }
          },
          "metaRequired": {
            "type": "boolean",
            "example": true
          },
          "metaApi": {
            "type": "object",
            "properties": {
              "uri": {
                "type": "string",
                "description": "URI of the Meta API",
                "example": "/v1/partnerOS/meta?module=Pricing&path=fees"
              },
              "headers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Headers"
                }
              },
              "body": {
                "$ref": "#/components/schemas/MetaRequestBody"
              }
            }
          },
          "successCriterias": {
            "type": "array",
            "items": null,
            "$ref": "#/components/schemas/Criteria"
          },
          "failureCriterias": {
            "type": "array",
            "items": null,
            "$ref": "#/components/schemas/FailureCriteria"
          }
        }
      },
      "ModuleName": {
        "type": "string",
        "enum": [
          "Pricing",
          "Order"
        ],
        "example": "Pricing"
      },
      "Criteria": {
        "type": "object",
        "required": [
          "condition",
          "successCriterias",
          "next"
        ],
        "properties": {
          "context": {
            "type": "string",
            "example": "$statusCode"
          },
          "condition": {
            "type": "string",
            "example": "$statusCode == 200"
          },
          "type": {
            "type": "string",
            "example": "$statusCode"
          },
          "next": {
            "$ref": "#/components/schemas/ModuleName"
          }
        }
      },
      "FailureCriteria": {
        "type": "object",
        "properties": {
          "context": {
            "type": "string",
            "example": "$statusCode"
          },
          "condition": {
            "type": "string",
            "example": "$statusCode == 200"
          },
          "type": {
            "type": "string",
            "example": "$statusCode"
          },
          "retryAfter": {
            "type": "number"
          },
          "retryLimit": {
            "type": "integer"
          },
          "next": {
            "$ref": "#/components/schemas/ModuleName"
          }
        }
      },
      "PathUri": {
        "type": "string",
        "example": "/v1/partneros/quote"
      },
      "Headers": {
        "type": "object",
        "properties": {
          "module": {
            "type": "string",
            "example": "Config"
          },
          "path": {
            "$ref": "#/components/schemas/PathUri"
          }
        }
      },
      "MetaRequestBody": {
        "type": "object",
        "properties": {
          "moudle": {
            "type": "string",
            "example": "Config"
          },
          "path": {
            "type": "string",
            "example": "Config"
          },
          "fields": {
            "type": "array",
            "items": null,
            "$ref": "#/components/schemas/MetaRequestField"
          }
        }
      },
      "MetaRequestField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Config"
          }
        }
      },
      "WUError": {
        "description": "Model representing Western Union Error schema",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique name of the error",
            "example": "VALIDATION_ERROR"
          },
          "message": {
            "type": "string",
            "description": "Message describing the error",
            "example": "One or more fields raised validation errors"
          },
          "errorCode": {
            "type": "string",
            "description": "Syntactic Error code",
            "example": "E0005"
          },
          "issues": {
            "type": "array",
            "description": "additional details of the error",
            "items": null,
            "$ref": "#/components/schemas/WUErrorDetails"
          }
        }
      },
      "WUErrorDetails": {
        "description": "Model representing WUError details - List of fields causing errors and their specific error messages",
        "type": "object",
        "properties": {
          "field": {
            "description": "field causing issue",
            "type": "string",
            "example": "userId"
          },
          "issue": {
            "description": "field specific issue description",
            "type": "string",
            "example": "Invalid User Id Entered"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "headers": {
          "x-wu-externalRefId": {
            "$ref": "#/components/headers/x-wu-externalRefId"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/WUError"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "headers": {
          "x-wu-externalRefId": {
            "$ref": "#/components/headers/x-wu-externalRefId"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/WUError"
            }
          }
        }
      }
    },
    "examples": {
      "SendMoneyCashPayWorkflowResponse": {
        "value": {
          "name": "SendMoney_Workflow",
          "version": "1.0.0",
          "description": "This workflow showcases the number of steps for execution for Send Money flow of Co-branded partners.",
          "modules": [
            {
              "name": "Config",
              "pathName": "entitledDestination",
              "pathUri": "/v1/partnerOS/config/entitledDestination",
              "caching": {
                "isEnabled": false,
                "ttl": 0
              },
              "metaRequired": false,
              "successCriterias": [
                {
                  "context": "$statusCode",
                  "condition": "$statusCode == 200",
                  "type": "JSONPath",
                  "next": "Fees"
                }
              ]
            },
            {
              "name": "Pricing",
              "pathName": "Fees",
              "pathUri": "/v1/partnerOS/pricing/fees",
              "caching": {
                "isEnabled": true,
                "ttl": 800
              },
              "metaRequired": false,
              "successCriterias": [
                {
                  "context": "$statusCode",
                  "condition": "$statusCode == 200",
                  "type": "JSONPath",
                  "next": "Quote"
                }
              ]
            },
            {
              "name": "Pricing",
              "pathName": "Quote",
              "pathUri": "/v1/partnerOS/pricing/quote",
              "caching": {
                "isEnabled": true,
                "ttl": 1200
              },
              "metaRequired": true,
              "metaApi": {
                "uri": "/v1/partnerOS/meta/pricing/quote"
              },
              "successCriterias": [
                {
                  "context": "$statusCode",
                  "condition": "$statusCode == 200",
                  "type": "JSONPath",
                  "next": "Create"
                }
              ],
              "failureCriterias": [
                {
                  "context": "$statusCode",
                  "condition": "$statusCode == 500",
                  "type": "$statusCode",
                  "retryAfter": 1000,
                  "retryLimit": 3,
                  "next": "Quote"
                }
              ]
            },
            {
              "name": "Order",
              "pathName": "Create",
              "pathUri": "/v1/partnerOS/order",
              "caching": {
                "isEnabled": true,
                "ttl": 1200
              },
              "metaRequired": true,
              "metaApi": {
                "uri": "/v1/partnerOS/meta/order/create",
                "body": [
                  {
                    "name": "sendCountry"
                  },
                  {
                    "name": "sendCurrency"
                  },
                  {
                    "name": "receiveCountry"
                  },
                  {
                    "name": "receiveCurrency"
                  },
                  {
                    "name": "payoutMethodCode"
                  },
                  {
                    "name": "attemptType"
                  }
                ]
              },
              "successCriterias": [
                {
                  "context": "$statusCode",
                  "condition": "$statusCode == 200",
                  "type": "JSONPath",
                  "next": "Confirm"
                }
              ]
            },
            {
              "name": "Order",
              "pathName": "Confirm",
              "pathUri": "/v1/partnerOS/order/confirm",
              "caching": {
                "isEnabled": true,
                "ttl": 1200
              },
              "metaRequired": true,
              "metaApi": {
                "uri": "/v1/partnerOS/meta/order/confirm"
              },
              "successCriterias": [
                {
                  "context": "$statusCode",
                  "condition": "$statusCode == 200",
                  "type": "JSONPath",
                  "next": "Confirm"
                }
              ]
            }
          ]
        }
      },
      "SendMoneyWorkflowResponse": {
        "value": {
          "name": "SendMoney_partner_Workflow",
          "version": "1.0.0",
          "description": "This workflow showcases the number of steps for execution for Send Money flow for whiteLabel partners.",
          "modules": [
            {
              "name": "Config",
              "pathName": "entitledDestination",
              "pathUri": "/v1/partnerOS/config/entitledDestination",
              "caching": {
                "isEnabled": false,
                "ttl": 0
              },
              "metaRequired": false,
              "successCriterias": [
                {
                  "context": "$statusCode",
                  "condition": "$statusCode == 200",
                  "type": "JSONPath",
                  "next": "Quote"
                }
              ]
            },
            {
              "name": "Pricing",
              "pathName": "Quote",
              "pathUri": "/v1/partnerOS/pricing/quote",
              "caching": {
                "isEnabled": true,
                "ttl": 1200
              },
              "metaRequired": true,
              "metaApi": {
                "uri": "/v1/partnerOS/meta/pricing/quote"
              },
              "successCriterias": [
                {
                  "context": "$statusCode",
                  "condition": "$statusCode == 200",
                  "type": "JSONPath",
                  "next": "Create"
                }
              ],
              "failureCriterias": [
                {
                  "context": "$statusCode",
                  "condition": "$statusCode == 500",
                  "type": "$statusCode",
                  "retryAfter": 1000,
                  "retryLimit": 3,
                  "next": "Quote"
                }
              ]
            },
            {
              "name": "Order",
              "pathName": "Create",
              "pathUri": "/v1/partnerOS/order",
              "caching": {
                "isEnabled": true,
                "ttl": 1200
              },
              "metaRequired": false,
              "metaApi": {
                "uri": "/v1/partnerOS/meta/order/create",
                "body": {
                  "fields": [
                    {
                      "name": "sendCountry"
                    },
                    {
                      "name": "sendCurrency"
                    },
                    {
                      "name": "receiveCountry"
                    },
                    {
                      "name": "receiveCurrency"
                    },
                    {
                      "name": "payoutMethodCode"
                    },
                    {
                      "name": "attemptType"
                    }
                  ]
                }
              },
              "successCriterias": [
                {
                  "context": "$statusCode",
                  "condition": "$statusCode == 200",
                  "type": "JSONPath",
                  "next": "Confirm"
                }
              ]
            },
            {
              "name": "Order",
              "pathName": "Confirm",
              "pathUri": "/v1/partnerOS/order/confirm",
              "caching": {
                "isEnabled": true,
                "ttl": 1200
              },
              "metaRequired": false,
              "successCriterias": [
                {
                  "context": "$statusCode",
                  "condition": "$statusCode == 200",
                  "type": "JSONPath",
                  "next": "Confirm"
                }
              ]
            }
          ]
        }
      }
    }
  }
}